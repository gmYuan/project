{"version":3,"file":"vue.js","sources":["../../src/observer/array.js","../../src/util.js","../../src/observer/index.js","../../src/state.js","../../src/compiler/parse.js","../../src/compiler/generate.js","../../src/compiler/index.js","../../src/vdom/patch.js","../../src/lifecycle.js","../../src/init.js","../../src/vdom/index.js","../../src/index.js"],"sourcesContent":["// 拿到数组原型上的方法 （原来的方法）\nlet oldArrayProtoMethods = Array.prototype;\n// 继承一下   ES5的方法\nexport let arrayMethods = Object.create(oldArrayProtoMethods);\nlet methods = [\n    'push',\n    'pop',\n    'shift',\n    'unshift',\n    'reverse',\n    'sort',\n    'splice'\n]\nmethods.forEach(method => {\n    arrayMethods[method] = function(...args) { // this就是observer里的value\n        const result = oldArrayProtoMethods[method].apply(this, args);\n        let inserted;\n        let ob = this.__ob__;\n        switch (method) {\n            case 'push': // arr.push({a:1},{b:2})\n            case 'unshift': //这两个方法都是追加 追加的内容可能是对象类型，应该被再次进行劫持\n                inserted = args;\n                break;\n            case 'splice': // vue.$set原理\n                inserted = args.slice(2); // arr.splice(0,1,{a:1},{a:1},{a:1})\n            default:\n                break;\n        }\n        if(inserted) ob.observeArray(inserted); // 给数组新增的值也要进行观测\n        return result;\n    }\n});","export function proxy(vm,data,key){\n    Object.defineProperty(vm,key,{ // vm.a\n        get(){\n            return vm[data][key]; // vm._data.a\n        },\n        set(newValue){ // vm.a = 100;\n            vm[data][key] = newValue// vm._data.a = 100;\n        }\n    })\n}\n\nexport function defineProperty(target,key,value){\n    Object.defineProperty(target,key,{\n        enumerable:false, // 不能被枚举，不能被循环出来\n        configurable:false,\n        value\n    });\n}","import { arrayMethods } from \"./array\";\nimport { defineProperty } from \"../util\";\nclass Observer{\n    constructor(value){\n        // 使用defineProperty 重新定义属性\n\n        // 判断一个对象是否被观测过看他有没有 __ob__这个属性\n        defineProperty(value,'__ob__',this);\n        if(Array.isArray(value)){\n            // 我希望调用push shift unshift splice sort reverse pop\n            // 函数劫持 、 切片编程\n            value.__proto__ = arrayMethods;\n            // 观测数组中的对象类型，对象变化也要做一些事\n            this.observeArray(value);\n        }else{\n            this.walk(value);\n        }\n\n    }\n    observeArray(value){\n        value.forEach(item=>{\n            observe(item); // 观测数组中的对象类型\n        })\n    }\n    walk(data){\n        let keys = Object.keys(data); // 获取对象的key\n        keys.forEach(key=>{\n            defineReactive(data,key,data[key]); // Vue.util.defineReactive\n        });\n    }\n}\n// 封装 继承\nfunction defineReactive(data,key,value){\n    observe(value); // 如果值是对象类型在进行观测\n    Object.defineProperty(data,key,{\n        get(){\n            return value\n        },\n        set(newValue){\n            if(newValue === value) return;\n            observe(newValue); // 如果用户将值改为对象继续监控\n            value = newValue\n        }\n    });\n}\n\nexport function observe(data){\n    // typeof null 也是object\n    // 不能不是对象 并且不是null\n    if(typeof data !== 'object' || data == null){\n        return data;\n    }\n    if(data.__ob__){\n        return data;\n    }\n    return new Observer(data)\n}","import { observe } from \"./observer/index\";\nimport { proxy } from './util.js';\nexport function initState(vm) { // vm.$options\n    const opts = vm.$options;\n    if (opts.props) {\n        initProps(vm);\n    }\n    if (opts.methods) {\n        initMethods(vm);\n    }\n    if (opts.data) {\n        initData(vm);\n    }\n    if (opts.computed) {\n        initComputed(vm);\n    }\n    if (opts.watch) {\n        initWatch(vm);\n    }\n}\nfunction initProps() {}\nfunction initMethods() {}\n\nfunction initData(vm) { // 数据的初始化操作\n    let data = vm.$options.data;\n    vm._data = data = typeof data == 'function'?data.call(vm):data;\n    // 数据的劫持方案 对象Object.defineProperty\n    // 数组 单独处理的\n\n    // 当我去vm上取属性时 ，帮我将属性的取值代理到vm._data上\n    for(let key in data){\n        proxy(vm,'_data',key);\n    }\n    observe(data);\n\n}\nfunction initComputed() {}\nfunction initWatch() {}","\n\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // 标签名\n// ?:匹配不捕获\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // </my:xx>\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的    aaa=\"aaa\"  a='aaa'   a=aaa\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 >    >   <div></div>  <br/>\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\n// 数据结构 树、栈、链表、队列、\nexport function parseHTML(html) {\n    function createASTElement(tagName, attrs) {\n        return {\n            tag: tagName, // 标签名\n            type: 1, // 元素类型\n            children: [], // 孩子列表\n            attrs, // 属性集合\n            parent: null // 父元素\n        }\n    }\n    let root;\n    let currentParent;\n    let stack = [];\n    function start(tagName, attrs) { // 创建一个元素 作为根元素\n        let element = createASTElement(tagName, attrs);\n        if(!root){\n            root = element;\n        }\n        currentParent = element; // 当前解析的标签 保存起来\n        stack.push(element); // 将生产的ast元素放到栈中\n    }\n\n    // <div> <p></p> hello</div>    currentParent=p\n    function end(tagName) { // 在结尾标签处 创建父子关系\n        let element = stack.pop(); // 取出栈中的最后一个\n        currentParent = stack[stack.length-1];\n        if(currentParent){ // 在闭合时可以知道这个标签的父亲是谁\n            element.parent = currentParent;\n            currentParent.children.push(element);\n        }\n    }\n    function chars(text) {\n        text = text.trim();\n        if(text){\n            currentParent.children.push({\n                type:3,\n                text\n            })\n        }\n    }\n\n    while (html) { // 只要html不为空字符串就一直解析\n        let textEnd = html.indexOf('<');\n        if (textEnd == 0) {\n            // 肯定是标签\n            const startTagMatch = parseStartTag(); // 开始标签匹配的结果 处理开始\n            if (startTagMatch) {\n                start(startTagMatch.tagName, startTagMatch.attrs);\n                continue;\n            }\n            const endTagMatch = html.match(endTag);\n            if (endTagMatch) { // 处理结束标签\n                advance(endTagMatch[0].length);\n                end(endTagMatch[1]); // 将结束标签传入 \n                continue;\n            }\n        }\n        let text;\n        if (textEnd > 0) { // 是处理文本\n            text = html.substring(0, textEnd)\n        }\n        if (text) { // 处理文本\n            advance(text.length);\n            chars(text);\n        }\n\n    }\n\n    function advance(n) { // 将字符串进行截取操作 在更新html内容\n        html = html.substring(n)\n    }\n\n    function parseStartTag() {\n        const start = html.match(startTagOpen);\n        if (start) {\n            const match = {\n                tagName: start[1],\n                attrs: []\n            }\n            advance(start[0].length); // 删除开始标签\n            // 如果直接是闭合标签了 说明没有属性\n            let end, attr;\n            // 不是结尾标签 能匹配到属性\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] });\n                advance(attr[0].length); // 去掉当前属性\n            }\n            if (end) { // >  删除匹配到的结束标签\n                advance(end[0].length);\n                return match;\n            }\n        }\n    }\n\n    return root;\n}","// 编写<div id=\"app\" style=\"color:red\"> hello {{name}} <span>hello</span></div>\n\n// 结果:render(){\n//    return _c('div',{id:'app',style:{color:'red'}},_v('hello'+_s(name)),_c('span',null,_v('hello')))\n//}\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\n//  语法层面的转义\nfunction genProps(attrs) { //  id   \"app\"     / style  \"fontSize:12px;color:red\"\n    let str = '';\n    for (let i = 0; i < attrs.length; i++) {\n        let attr = attrs[i];\n        if (attr.name === 'style') {\n            let obj = {}; // 对样式进行特殊的处理 \n            attr.value.split(';').forEach(item => {\n                let [key, value] = item.split(':');\n                obj[key] = value;\n            });\n            attr.value = obj;\n        }\n        str += `${attr.name}:${JSON.stringify(attr.value)},`;\n    }\n    return `{${str.slice(0,-1)}}`;\n}\nfunction gen(node) {\n    if (node.type == 1) {\n        return generate(node); // 生产元素节点的字符串\n    } else {\n        let text = node.text; // 获取文本\n        // 如果是普通文本 不带{{}}\n\n        if(!defaultTagRE.test(text)){\n            return `_v(${JSON.stringify(text)})` // _v('hello {{ name }} world {{msg}} aa')   => _v('hello'+_s(name) +'world' + _s(msg))\n        }\n        let tokens = []; // 存放每一段的代码\n        let lastIndex = defaultTagRE.lastIndex = 0; // 如果正则是全局模式 需要每次使用前置为0\n        let match,index; // 每次匹配到的结果\n\n        while(match = defaultTagRE.exec(text)){\n            index = match.index; // 保存匹配到的索引\n            if(index > lastIndex){\n                tokens.push(JSON.stringify(text.slice(lastIndex,index)))\n            }\n            tokens.push(`_s(${match[1].trim()})`);\n            lastIndex = index+match[0].length;\n        }\n        if(lastIndex < text.length){\n            tokens.push(JSON.stringify(text.slice(lastIndex)));\n        }\n        return `_v(${tokens.join('+')})`;\n    }\n}\nfunction genChildren(el) {\n    const children = el.children;\n    if (children) { // 将所有转化后的儿子用逗号拼接起来\n        return children.map(child => gen(child)).join(',')\n    }\n}\nexport function generate(el) {\n    let children = genChildren(el);// 儿子的生成\n    let code = `_c('${el.tag}',${\n        el.attrs.length? `${genProps(el.attrs)}`:'undefined'\n    }${\n        children?`,${children}`:''\n    })`;\n    return code;\n}","//  <div id=\"app\">hello {{name}} <span>world</span> <p></p></div>\nimport { parseHTML } from \"./parse\";\nimport { generate } from \"./generate\";\n\n\nexport function compileToFunctions(template) {\n    // html模板 => render函数  (ast是用来描述代码的)\n    // 1.需要将html代码转化成\"ast\"语法树 可以用ast树来描述语言本身\n\n    // 前端必须要掌握的数据结构 (树)\n    let ast = parseHTML(template);\n\n    // 2.优化静态节点\n\n    // 3.通过这课树 重新的生成代码\n    let code = generate(ast);\n\n    // 4.将字符串变成函数 限制取值范围 通过with来进行取值 稍后调用render函数就可以通过改变this 让这个函数内部取到结果了\n    let render = new Function(`with(this){return ${code}}`);\n    return render;\n\n}\n\n\n","export function patch(oldVnode,vnode){\n    // 将虚拟节点转化成真实节点\n    let el = createElm(vnode); // 产生真实的dom \n    let parentElm = oldVnode.parentNode; // 获取老的app的父亲 =》 body\n    parentElm.insertBefore(el,oldVnode.nextSibling); // 当前的真实元素插入到app的后面\n    parentElm.removeChild(oldVnode); // 删除老的节点\n}\n\nfunction createElm(vnode){\n    let {tag,children,key,data,text} = vnode;\n    if(typeof tag == 'string'){ // 创建元素 放到vnode.el上\n        vnode.el = document.createElement(tag);\n        children.forEach(child=>{ // 遍历儿子 将儿子渲染后的结果扔到父亲中\n            vnode.el.appendChild(createElm(child));\n        })\n    }else{ // 创建文件 放到vnode.el上\n        vnode.el = document.createTextNode(text);\n    }\n    return vnode.el;\n}\n\n// vue 的渲染流程 =》 先初始化数据 =》 将模板进行编译 =》 render函数 =》 生成虚拟节点 =》 生成真实的dom  =》 扔到页面上","import { patch } from \"./vdom/patch\";\n\nexport function lifecycleMixin(Vue) {\n  Vue.prototype._update = function (vnode) {\n    const vm = this;\n    patch(vm.$el, vnode);\n  };\n}\n\nexport function mountComponent(vm, el) {\n  // 调用render方法去渲染 el属性\n  // 先调用render方法创建虚拟节点，在将虚拟节点渲染到页面上\n\n  vm._update(vm._render());\n}\n","import { initState } from \"./state\";\nimport { compileToFunctions } from \"./compiler/index\";\nimport { mountComponent } from \"./lifecycle\";\n\nexport function initMixin(Vue){\n    Vue.prototype._init = function (options) {\n        const vm = this;\n        vm.$options = options;\n        // 初始化状态 （将数据做一个初始化的劫持 当我改变数据时应该更新视图）\n        // vue组件中有很多状态 data props watch computed\n        initState(vm);\n        // vue里面核心特性 响应式数据原理 \n        // Vue 是一个什么样的框架 MVVM\n\n        // 数据变化视图会更新，视图变化数据会被影响 （MVVM）不能跳过数据去更新视图，$ref\n\n        // 如果当前有el属性说明要渲染模板\n        if(vm.$options.el){\n            vm.$mount(vm.$options.el)\n        }\n\n    }\n    Vue.prototype.$mount = function (el) {\n        // 挂载操作\n        const vm = this;\n        const options = vm.$options;\n        el = document.querySelector(el);\n        vm.$el = el;\n        \n        if(!options.render){\n            // 没render 将template转化成render方法\n            let template = options.template;\n            if(!template && el){\n                template = el.outerHTML;\n            }\n            // 编译原理 将模板编译成render函数\n            const render = compileToFunctions(template);\n            options.render = render\n        }\n        // 渲染时用的都是这个render方法\n\n        // 需要挂载这个组件\n        mountComponent(vm,el);\n    }\n}","export function renderMixin(Vue) { // 用对象来描述dom的解构\n    Vue.prototype._c = function() { // 创建虚拟dom元素\n        return createElement(...arguments);\n    }\n    Vue.prototype._s = function(val) { // stringify\n        return val == null ? '' : (typeof val == 'object') ? JSON.stringify(val) : val;\n    }\n    Vue.prototype._v = function(text) { // 创建虚拟dom文本元素\n        return createTextVnode(text);\n    }\n    Vue.prototype._render = function() { // _render = render\n        const vm = this;\n        const render = vm.$options.render;\n        let vnode = render.call(vm);\n        console.log(vnode);\n        return vnode;\n    }\n}\n// _c('div',{},_v(),_c())\nfunction createElement(tag,data={},...children){\n   return vnode(tag,data,data.key,children)\n}\nfunction createTextVnode(text){\n    return vnode(undefined,undefined,undefined,undefined,text);\n}\n// 用来产生虚拟dom的\nfunction vnode(tag,data,key,children,text){\n    return {\n        tag,\n        data,\n        key,\n        children,\n        text\n    }\n}","// es6的类的写法 一个整体\n\nimport { initMixin } from \"./init\";\nimport { lifecycleMixin } from \"./lifecycle\";\nimport { renderMixin } from \"./vdom/index\";\n\nfunction Vue(options){\n   this._init(options); // 入口方法,做初始化操作\n}\n\n// 写成一个个的插件进行对原型的扩展\ninitMixin(Vue);\nlifecycleMixin(Vue); // 混合生命周期 渲染\nrenderMixin(Vue);\n// 初始化方法\n\nexport default Vue;"],"names":["oldArrayProtoMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","method","args","result","apply","inserted","ob","__ob__","slice","observeArray","proxy","vm","data","key","defineProperty","get","set","newValue","target","value","enumerable","configurable","Observer","isArray","__proto__","walk","item","observe","keys","defineReactive","initState","opts","$options","props","initData","computed","watch","_data","call","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","createASTElement","tagName","attrs","tag","type","children","parent","root","currentParent","stack","start","element","push","end","pop","length","chars","text","trim","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","genProps","str","i","obj","split","JSON","stringify","gen","node","generate","test","tokens","lastIndex","index","exec","join","genChildren","el","map","child","code","compileToFunctions","template","ast","render","Function","patch","oldVnode","vnode","createElm","parentElm","parentNode","insertBefore","nextSibling","removeChild","document","createElement","appendChild","createTextNode","lifecycleMixin","Vue","_update","$el","mountComponent","_render","initMixin","_init","options","$mount","querySelector","outerHTML","renderMixin","_c","arguments","_s","val","_v","createTextVnode","console","log","undefined"],"mappings":"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"}