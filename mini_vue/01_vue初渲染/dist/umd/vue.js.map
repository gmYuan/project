{"version":3,"file":"vue.js","sources":["../../src/utils.js","../../src/observer/index.js","../../src/state.js","../../src/init.js","../../src/index.js"],"sourcesContent":["export function isObject(val) {\n    return typeof val == 'object' && val !== null\n}\n\nexport function isFunction(val) {\n    return typeof val === 'function';\n}","import { isObject } from \"../utils\";\n\n// 劫持对象类型\nexport function observe(data) {\n    // 如果是对象才观测\n    if (!isObject(data)) {\n        return;\n    }\n    return new Observer(data)\n}\n\n// 对象类型的 劫持中心\nclass Observer {\n    //S1 对对象中的所有属性 进行劫持\n    // 缺点：需要递归劫持嵌套对象的属性（增加get/set）,影响性能\n    // 所以 Vue3 改成了 proxy来监听\n    constructor(data) { \n        this.walk(data);\n    }\n\n    walk(data) {\n        Object.keys(data).forEach(key => {\n            defineReactive(data, key, data[key]);\n        })\n    }\n\n}\n\n// vue2会对对象进行遍历 ==> 每个属性用defineProperty重新定义\nfunction defineReactive(data,key,value){ \n    observe(value); // 处理对象嵌套 ==> 递归调用\n\n    Object.defineProperty(data, key, {\n        get(){\n            return value\n        },\n        set(newV){ \n            // Todo 更新视图\n            console.log('监测到值发生了变化')\n            //如果赋值的是一个新对象 ，也需要对这个新对象 进行劫持\n            observe(newV);\n            value = newV;\n        }\n    })\n}","import { observe } from \"./observer/index\";\n\nexport function initState(vm) {\n    const opts = vm.$options;\n    if (opts.props) {\n        initProps(vm);\n    }\n    if (opts.methods) {\n        initMethods(vm);\n    }\n    if (opts.data) {\n        initData(vm);\n    }\n    if (opts.computed) {\n        initComputed(vm);\n    }\n    if (opts.watch) {\n        initWatch(vm);\n    }\n}\n\nfunction initProps() {}\n\nfunction initMethods() {}\n\nfunction initData(vm) {\n    let data = vm.$options.data;\n    // 把data结果 挂载到 vue._data上\n    vm._data = data = typeof data == 'function'? data.call(vm):data;\n\n    //S3 数据劫持/响应式原理\n    // Vue2: 对象==> Object.defineProperty; 数组==> 单独处理\n\n    // 当我去vm上取属性时 ，帮我将属性的取值代理到vm._data上\n    // for(let key in data){\n    //     proxy(vm,'_data',key);\n    // } \n    observe(data);\n}\n\nfunction initComputed() {}\n\nfunction initWatch() {}","import { initState } from \"./state\";\n\nexport function initMixin(Vue){\n    Vue.prototype._init = function (options) {\n        const vm = this;\n        vm.$options = options;\n\n        // S2 对初始化数据的类型进行 逻辑细分 ==> Props/ Data/ Computed等\n        initState(vm);\n      \n    }\n}","// 入口：对Vue进行声明和扩展\nimport { initMixin } from \"./init\";\n\nfunction Vue(options){\n   //S1 初始化数据\n   this._init(options); \n}\n\n//代码技巧：对Vue对象的 原型进行扩展==> 写成一个个的插件，从而解偶代码\ninitMixin(Vue);\n\nexport default Vue;"],"names":["isObject","val","observe","data","Observer","walk","Object","keys","forEach","key","defineReactive","value","defineProperty","get","set","newV","console","log","initState","vm","opts","$options","props","methods","initData","computed","watch","_data","call","initMixin","Vue","prototype","_init","options"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAO,SAASA,QAAT,CAAkBC,GAAlB,EAAuB;EAC1B,SAAO,QAAOA,GAAP,KAAc,QAAd,IAA0BA,GAAG,KAAK,IAAzC;EACH;;ECCM,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;EAC1B;EACA,MAAI,CAACH,QAAQ,CAACG,IAAD,CAAb,EAAqB;EACjB;EACH;;EACD,SAAO,IAAIC,QAAJ,CAAaD,IAAb,CAAP;EACH;;MAGKC;EACF;EACA;EACA;EACA,oBAAYD,IAAZ,EAAkB;EAAA;;EACd,SAAKE,IAAL,CAAUF,IAAV;EACH;;;;2BAEIA,MAAM;EACPG,MAAAA,MAAM,CAACC,IAAP,CAAYJ,IAAZ,EAAkBK,OAAlB,CAA0B,UAAAC,GAAG,EAAI;EAC7BC,QAAAA,cAAc,CAACP,IAAD,EAAOM,GAAP,EAAYN,IAAI,CAACM,GAAD,CAAhB,CAAd;EACH,OAFD;EAGH;;;;;;;EAKL,SAASC,cAAT,CAAwBP,IAAxB,EAA6BM,GAA7B,EAAiCE,KAAjC,EAAuC;EACnCT,EAAAA,OAAO,CAACS,KAAD,CAAP,CADmC;;EAGnCL,EAAAA,MAAM,CAACM,cAAP,CAAsBT,IAAtB,EAA4BM,GAA5B,EAAiC;EAC7BI,IAAAA,GAD6B,iBACxB;EACD,aAAOF,KAAP;EACH,KAH4B;EAI7BG,IAAAA,GAJ6B,eAIzBC,IAJyB,EAIpB;EACL;EACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAFK;;EAILf,MAAAA,OAAO,CAACa,IAAD,CAAP;EACAJ,MAAAA,KAAK,GAAGI,IAAR;EACH;EAV4B,GAAjC;EAYH;;EC1CM,SAASG,SAAT,CAAmBC,EAAnB,EAAuB;EAC1B,MAAMC,IAAI,GAAGD,EAAE,CAACE,QAAhB;;EACA,MAAID,IAAI,CAACE,KAAT,EAAgB;;EAGhB,MAAIF,IAAI,CAACG,OAAT,EAAkB;;EAGlB,MAAIH,IAAI,CAACjB,IAAT,EAAe;EACXqB,IAAAA,QAAQ,CAACL,EAAD,CAAR;EACH;;EACD,MAAIC,IAAI,CAACK,QAAT,EAAmB;;EAGnB,MAAIL,IAAI,CAACM,KAAT,EAAgB;EAGnB;;EAMD,SAASF,QAAT,CAAkBL,EAAlB,EAAsB;EAClB,MAAIhB,IAAI,GAAGgB,EAAE,CAACE,QAAH,CAAYlB,IAAvB,CADkB;;EAGlBgB,EAAAA,EAAE,CAACQ,KAAH,GAAWxB,IAAI,GAAG,OAAOA,IAAP,IAAe,UAAf,GAA2BA,IAAI,CAACyB,IAAL,CAAUT,EAAV,CAA3B,GAAyChB,IAA3D,CAHkB;EAMlB;EAEA;EACA;EACA;EACA;;EACAD,EAAAA,OAAO,CAACC,IAAD,CAAP;EACH;;ECpCM,SAAS0B,SAAT,CAAmBC,GAAnB,EAAuB;EAC1BA,EAAAA,GAAG,CAACC,SAAJ,CAAcC,KAAd,GAAsB,UAAUC,OAAV,EAAmB;EACrC,QAAMd,EAAE,GAAG,IAAX;EACAA,IAAAA,EAAE,CAACE,QAAH,GAAcY,OAAd,CAFqC;;EAKrCf,IAAAA,SAAS,CAACC,EAAD,CAAT;EAEH,GAPD;EAQH;;ECXD;;EAGA,SAASW,GAAT,CAAaG,OAAb,EAAqB;EAClB;EACA,OAAKD,KAAL,CAAWC,OAAX;EACF;;;EAGDJ,SAAS,CAACC,GAAD,CAAT;;;;;;;;"}